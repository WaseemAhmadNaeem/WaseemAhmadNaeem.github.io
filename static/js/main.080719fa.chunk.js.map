{"version":3,"sources":["Components/NavigationBar/NavigationBar.js","Components/Introduction/Introduction.js","Components/Project/Project.js","Components/FeaturedWork/FeaturedWork.js","Components/Skills/Skills.js","Components/Contact/Contact.js","Components/Homepage/Homepage.js","Components/Footer/Footer.js","App.js","serviceWorker.js","Reducers/ProjectReducer.js","Constants/project-action-types.js","Reducers/SkillsReducer.js","Constants/skill-action-type.js","Reducers/index.js","index.js"],"names":["NavigationBar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","class","href","Component","Introduction","Project","props","state","this","project","title","description","technology","FeaturedWork","useSelector","projects","filter","el","featured","length","map","Skills","skill","console","log","frontend","backend","miscellaneous","Contact","Homepage","Footer","App","exact","path","Boolean","window","location","hostname","match","ProjectReducerInitialState","ProjectReducer","action","SkillsReducerInitialState","SkillsReducer","rootReducer","combineReducers","store","createStore","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.080719fa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class NavigationBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\">Waseem Ahmad Naeem</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div class=\"navbar-nav\">\r\n                        <a className=\"nav-item nav-link\" href=\"#\">Home</a>\r\n                        <a className=\"nav-item nav-link\" href=\"#\">Projects</a>\r\n                        <a className=\"nav-item nav-link \" href=\"#\">Contact</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Introduction extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"introduction\">\r\n                <div className=\"container text\">\r\n                    <h1>Hey I'm Waseem</h1>\r\n                    <p>Full Stack Developer & Tea addict</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"card shadow\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-title\">\r\n                        <h4>{this.props.project.title}</h4>\r\n                    </div>\r\n                    <p className=\"card-text\">{this.props.project.description}</p>\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n                    Made with {this.props.project.technology}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Project from '../Project/Project'\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function FeaturedWork() {\r\n    let state = useSelector(state => state);\r\n    state = state.project.projects.filter(el => el.featured)\r\n\r\n    return (\r\n        <div className=\"featuredWork bg-light\">\r\n            <div className=\"container\">\r\n                {\r\n                    state.length > 0 ? <h1 className=\"title p-3\"> Featured Work </h1> : \"\"\r\n                }\r\n                {\r\n                    state.map(el => (\r\n                        < Project project={el} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nexport default function Skills() {\r\n\r\n    let state = useSelector(state => state.skill)\r\n    console.log(state);\r\n\r\n    return (\r\n        <div className=\"bg-light\">\r\n            <div className=\"container\">\r\n                <h1>Skills</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xm-12 col-sm-12 col-md-4 col-lg-4 mt-3\">\r\n                        <div className=\"card shadow text-center\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"card-text\">\r\n                                    <h3>Frontend</h3>\r\n                                </div>\r\n                            </div>\r\n                            <ul class=\"list-group list-group-flush\">\r\n                                {\r\n                                    state.frontend.map(el => (\r\n                                        <li class=\"list-group-item\">{el}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xm-12 col-sm-12 col-md-4 col-lg-4 mt-3\">\r\n                        <div className=\"card shadow text-center\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"card-text\">\r\n                                    <h3>Backend</h3>\r\n                                </div>\r\n                            </div>\r\n                            <ul class=\"list-group list-group-flush\">\r\n                                {\r\n                                    state.backend.map(el => (\r\n                                        <li class=\"list-group-item\">{el}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xm-12 col-sm-12 col-md-4 col-lg-4 mt-3\">\r\n                        <div className=\"card shadow text-center\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"card-text\">\r\n                                    <h3>Miscellaneous</h3>\r\n                                </div>\r\n                            </div>\r\n                            <ul class=\"list-group list-group-flush\">\r\n                                {\r\n                                    state.miscellaneous.map(el => (\r\n                                        <li class=\"list-group-item\">{el}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contact\">\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"card-body text-center p-5\">\r\n                            <a href=\"https://www.facebook.com/WaseemAhmadNaeem\">Connect @ Facebook</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Introduction from '../Introduction/Introduction'\r\nimport FeaturedWork from '../FeaturedWork/FeaturedWork'\r\nimport Skills from '../Skills/Skills'\r\nimport Contact from '../Contact/Contact'\r\n\r\nexport default function Homepage() {\r\n    return (\r\n        <div className=\"pb-5 bg-light\">\r\n            < Introduction />\r\n            < FeaturedWork />\r\n            <br /><br />\r\n            <Skills />\r\n            <Contact />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"bg-dark footer\">\r\n                <div className=\"container\">\r\n                    <p>@2019 Waseem Ahmad Naeem, All rights reserved</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport NavigationBar from './Components/NavigationBar/NavigationBar';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Homepage from './Components/Homepage/Homepage';\nimport Footer from './Components/Footer/Footer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      < NavigationBar />\n\n      <Router >\n\n        <Router exact path=\"/\">\n          <Homepage />\n        </Router>\n\n        <Route path=\"/projects\">\n          <h3>Projects need to add</h3>\n        </Route>\n\n        <Route path=\"/contact\">\n          <h3>Add Contact Component</h3>\n        </Route>\n\n      </Router>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_PROJECT, REMOVE_PROJECT } from \"../Constants/project-action-types\";\r\n\r\nconst ProjectReducerInitialState = {\r\n    projects: [\r\n        {\r\n            title: \"Hire Developer\",\r\n            description: \"Our application Hire Developer is a web-based application which is used for freelancing purpose. The technologies we used are Angular 2+ for frontend and Firebase for the backend. The main functionality of this application is a person who signup as an employer can hire a developer for their tasks. There are 3 types of users of this application in which we have the Admin, Employer, and Developer. Every user has their own functionalities that can only be used by him/her. We also used notification service for real-time notifications using firebase cloud functions. There are some of the major things we provide below and also the way to how to set up the structure for building this application.\",\r\n            featured: true,\r\n            technology: 'Angular, Firestore'\r\n        },\r\n        {\r\n            title: \"Two Word Topic Miner\",\r\n            description: \"I developed two word topic miner using MeTA Toolkit. This is part of Data mining project. This application get text of any length and count occurrence of co-occurring words (without stop words) and suggest the top result as topic of document\",\r\n            featured: true,\r\n            technology: \"Meta Toolkit\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst ProjectReducer = (state = ProjectReducerInitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_PROJECT:\r\n            return state\r\n        case REMOVE_PROJECT:\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ProjectReducer;","export const ADD_PROJECT = \"ADD_PROJECT\";\r\nexport const REMOVE_PROJECT = \"REMOVE_PROJECT\";","import { ADD_SKILL, REMOVE_SKILL } from \"../Constants/skill-action-type\";\r\n\r\nconst SkillsReducerInitialState = {\r\n    frontend: [\r\n        \"Angular\",\r\n        \"React.Js\",\r\n        \"Bootstrap\",\r\n        \"Ng-Zorro\",\r\n    ],\r\n    backend: [\r\n        \"Express.js\",\r\n        \"MongoDB\",\r\n        \"Firebase\",\r\n        \"SQL\"\r\n    ],\r\n    miscellaneous: [\r\n        \"Electron.js\",\r\n        \"Ionic\",\r\n        \"Unity 3D\",\r\n        \"WPF\"\r\n    ]\r\n}\r\n\r\nconst SkillsReducer = (state = SkillsReducerInitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_SKILL:\r\n            return state;\r\n\r\n        case REMOVE_SKILL:\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SkillsReducer;","export const ADD_SKILL = \"ADD_SKILL\";\r\nexport const REMOVE_SKILL = \"REMOVE_SKILL\";\r\n","import { combineReducers } from \"redux\";\r\nimport ProjectReducer from './ProjectReducer';\r\nimport SkillsReducer from \"./SkillsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    project: ProjectReducer,\r\n    skill: SkillsReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Reducers\";\nlet store = createStore(rootReducer);\n\nlet element = <Provider store={store}>\n    <App />\n</Provider>\n\nReactDOM.render(element, document.getElementById('root'));\n\n"],"sourceRoot":""}